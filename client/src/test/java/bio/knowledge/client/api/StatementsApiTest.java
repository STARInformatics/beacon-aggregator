/*
 * Translator Knowledge Beacon API
 * This is the Translator Knowledge Beacon web service application programming interface (API). 
 *
 * OpenAPI spec version: 1.0.18
 * Contact: richard@starinformatics.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package bio.knowledge.client.api;

import java.util.List;

import org.junit.Ignore;
import org.junit.Test;

import bio.knowledge.client.ApiException;
import bio.knowledge.client.model.BeaconAnnotation;
import bio.knowledge.client.model.BeaconStatement;

/**
 * API tests for StatementsApi
 */
@Ignore
public class StatementsApiTest {

    private final StatementsApi api = new StatementsApi();

    
    /**
     * 
     *
     * Retrieves a (paged) list of annotations cited as evidence for a specified concept-relationship statement 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getEvidenceTest() throws ApiException {
        String statementId = null;
        List<String> keywords = null;
        Integer size = null;
        List<BeaconAnnotation> response = api.getEvidence(statementId, keywords, size);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Given a specified set of [CURIE-encoded](https://www.w3.org/TR/curie/)  &#39;source&#39; (&#39;s&#39;) concept identifiers,  retrieves a paged list of relationship statements where either the subject or object concept matches any of the input &#39;source&#39; concepts provided.  Optionally, a set of &#39;target&#39; (&#39;t&#39;) concept  identifiers may also be given, in which case a member of the &#39;target&#39; identifier set should match the concept opposing the &#39;source&#39; in the  statement, that is, if the&#39;source&#39; matches a subject, then the  &#39;target&#39; should match the object of a given statement (or vice versa). 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getStatementsTest() throws ApiException {
        List<String> s = null;
        List<String> relations = null;
        List<String> t = null;
        List<String> keywords = null;
        List<String> categories = null;
        Integer size = null;
        List<BeaconStatement> response = api.getStatements(s, relations, t, keywords, categories, size);

        // TODO: test validations
    }
    
}
