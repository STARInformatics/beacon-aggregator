// NCATS Translator Knowledge Beacon Aggregator Meta-Project Root Build File

ext {
	gradleVersion            = '4.10.3'
	apacheHTTPClientVersion  = '4.5.2'
	springVersion            = '5.0.4.RELEASE'
	jacksonXmlVersion        = '2.9.4'
	logbackCoreVersion       = '1.2.3'
	springBootVersion        = '2.0.0.RC1' // should we now use 2.1.7.RELEASE
	springDataVersion        = 'Kay-SR3'
	springDataNeo4jVersion   = '5.0.4.RELEASE'
	springNeo4jVersion       = '3.3.4'
	springNeo4jOGMVersion    = '3.0.3'
	springFoxSwaggerVersion  = '2.7.0'
}

wrapper{
	gradleVersion = "$gradleVersion"
}

buildscript {
    ext {
        springBootVersion = '2.0.0.RC1'
        springDependencyMgmtVersion = '1.0.4.RELEASE'
    }
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/libs-release" }
		maven { url 'https://repo.spring.io/libs-milestone' }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion")
		classpath("io.spring.gradle:dependency-management-plugin:$springDependencyMgmtVersion")
        classpath("com.eriwen:gradle-css-plugin:2.14.0")
    }
}

allprojects {
	
	//Beacon aggregating server, calls a list of Knowledge Beacons and aggregates results
	version = '1.1.14'
	 
    apply plugin: 'maven'
    apply plugin: 'java'
    apply plugin: 'eclipse-wtp'
    apply plugin: 'io.spring.dependency-management'
		
	group = 'bio.knowledge'
	
	sourceCompatibility = 1.8
	targetCompatibility = 1.8
    
    repositories {
	    mavenCentral()
	    mavenLocal()
	    maven { url "https://repo.spring.io/libs-release" }
	    maven { url 'https://repo.spring.io/libs-milestone' }
	    maven { url 'https://repo.spring.io/libs-snapshot' }
	    maven { url "https://m2.neo4j.org" }
	    maven { url "http://mvnrepository.com/" }
    }
    
    uploadArchives {
	    repositories {
	        mavenDeployer {
	            pom.project {
					parent {
						groupId "org.springframework.boot"
						artifactId "spring-boot-starter-parent"
						version "$springBootVersion"
					}
				}
	        }
	    }
	}
    
    dependencies {
    
		compile "commons-collections:commons-collections:3.2"
		compile 'org.apache.commons:commons-lang3:3.4'
		compile "org.apache.httpcomponents:httpclient:$apacheHTTPClientVersion"
				
		compile "com.fasterxml.jackson.core:jackson-core:$jacksonXmlVersion"
		compile "com.fasterxml.jackson.core:jackson-annotations:$jacksonXmlVersion"
		compile "com.fasterxml.jackson.core:jackson-databind:$jacksonXmlVersion"
		
		compile "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:$jacksonXmlVersion"

		compile "ch.qos.logback:logback-core:$logbackCoreVersion"
		compile "ch.qos.logback:logback-classic:$logbackCoreVersion"
		compile "ch.qos.logback:logback-access:$logbackCoreVersion"

		compile "org.springframework:spring-core:$springVersion"
		compile "org.springframework:spring-context:$springVersion"
		compile "org.springframework:spring-context-support:$springVersion"
		compile "org.springframework:spring-aop:$springVersion"
		compile "org.springframework:spring-beans:$springVersion"
		compile "org.springframework:spring-expression:$springVersion"
		compile "org.springframework:spring-test:$springVersion"
		compile "org.springframework:spring-tx:$springVersion"
		compile "org.springframework:spring-web:$springVersion"
		compile "org.springframework:spring-webmvc:$springVersion"

		testCompile 'junit:junit:4.12'
    }
    
	dependencyManagement {
		imports { 
			//mavenBom "org.springframework.cloud:spring-cloud-starter-parent:Angel.SR3" 
			mavenBom "org.springframework:spring-framework-bom:${springVersion}"
			mavenBom "org.springframework.data:spring-data-releasetrain:${springDataVersion}"
		}
	}
	
    jar {
        from sourceSets.main.allSource
        manifest.attributes provider: 'STAR Informatics'
    }
}

dependencies {
	implementation project(':ontology'), project(':models'), project(':database'), project(':client'), \
                       project(':aggregator'), project(':server')
}

configurations {
    providedRuntime
    all*.exclude group: '', module: 'servlet-api'
}

configurations.all {
    resolutionStrategy.eachDependency {
        if(it.requested.name == 'org.objectweb.asm') {
            it.useTarget 'org.ow2.asm:asm:5.0.3'
        }
    }
}

eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

project(':ontology') {

    dependencies {
    	
		// https://mvnrepository.com/artifact/org.apache.commons/commons-text
		compile "org.apache.commons:commons-text:1.2"
	}
}

project(':models') {

  dependencies {

	  implementation project(':ontology')
		
	  compile("org.springframework.data:spring-data-neo4j:$springDataNeo4jVersion")
  }
}

project(':client') {

  dependencies {
	  implementation project(':ontology'), project(':models')
  }

}

project(':database') {

	dependencies {

		implementation project(':ontology'), project(':models')

		compile("org.springframework.boot:spring-boot:$springBootVersion")
		compile("org.springframework.boot:spring-boot-starter-test:$springBootVersion")

		compile("org.springframework.data:spring-data-neo4j:$springDataNeo4jVersion")
		compile "org.neo4j:neo4j-codegen:$springNeo4jVersion"
		compile "org.neo4j:neo4j:$springNeo4jVersion"
		compile "org.neo4j:neo4j-kernel:$springNeo4jVersion"
		compile "org.neo4j:neo4j-io:$springNeo4jVersion"

		compile("org.neo4j:neo4j-ogm-core:$springNeo4jOGMVersion")
		compile "org.neo4j:neo4j-ogm-http-driver:$springNeo4jOGMVersion"
		compile "org.neo4j:neo4j-ogm-embedded-driver:$springNeo4jOGMVersion"
		compile "org.neo4j:neo4j-ogm-bolt-driver:$springNeo4jOGMVersion"
	}
}

project(':aggregator') {

	dependencies {
		implementation project(':ontology'), project(':models'), project(':database'), project(':client')
	}
  
	compileJava {
    		options.encoding = 'UTF-8'
    		options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
	}
}

project(':server') {

	archivesBaseName  = 'beacon-aggregator'
	description       = 'Translator Knowledge Beacon Aggregator'

	apply plugin: 'org.springframework.boot'

	dependencies {
		implementation project(':ontology'), project(':models'), project(':database'), \
                       project(':client'), project(':aggregator')

		compile("org.springframework:spring-context:$springVersion")

		compile("org.springframework.boot:spring-boot:$springBootVersion")
		compile("org.springframework.boot:spring-boot-actuator:$springBootVersion")
		compile("org.springframework.boot:spring-boot-autoconfigure:$springBootVersion")

		// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-parent
		compile("org.springframework.boot:spring-boot-starter-parent:$springBootVersion")

		// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web
		compile("org.springframework.boot:spring-boot-starter-web:$springBootVersion")

		compile("org.springframework.boot:spring-boot-starter:$springBootVersion")
		compile("org.springframework.boot:spring-boot-starter-logging:$springBootVersion")
		compile("org.springframework.boot:spring-boot-starter-actuator:$springBootVersion")
		compile("org.springframework.boot:spring-boot-starter-mail:$springBootVersion")
		compile("org.springframework.boot:spring-boot-starter-tomcat:$springBootVersion")
		compile("org.springframework.boot:spring-boot-starter-test:$springBootVersion")	    

		// https://mvnrepository.com/artifact/io.springfox/springfox-swagger2
		compile("io.springfox:springfox-swagger2:$springFoxSwaggerVersion")

		// https://mvnrepository.com/artifact/io.springfox/springfox-swagger-ui
		compile("io.springfox:springfox-swagger-ui:$springFoxSwaggerVersion")

		// https://mvnrepository.com/artifact/javax.validation/validation-api
		compile group: 'javax.validation', name: 'validation-api', version: '1.1.0.Final'

		// https://mvnrepository.com/artifact/io.swagger/swagger-jaxrs
		compile group: 'io.swagger', name: 'swagger-jaxrs', version: '1.5.0'

		// https://mvnrepository.com/artifact/com.fasterxml.jackson.datatype/jackson-datatype-joda
		compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-joda', version: '2.9.0.pr2'

		// https://mvnrepository.com/artifact/joda-time/joda-time
		//compile group: 'joda-time', name: 'joda-time', version: '2.9.9'

		// https://mvnrepository.com/artifact/com.github.joschi.jackson/jackson-datatype-threetenbp
		compile group: 'com.github.joschi.jackson', name: 'jackson-datatype-threetenbp', version: '2.6.4'

		// https://mvnrepository.com/artifact/io.swagger.core.v3/swagger-annotations
		compile group: 'io.swagger.core.v3', name: 'swagger-annotations', version: '2.0.8'

		compile 'org.hibernate:hibernate-validator:5.2.2.Final'
		compile 'commons-cli:commons-cli:1.1'
	}

	bootJar {
		mainClassName = "bio.knowledge.server.Swagger2SpringBoot"
		manifest {
			attributes 'Start-Class': 'bio.knowledge.server.Swagger2SpringBoot'
		}
	}
}
